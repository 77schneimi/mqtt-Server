# =================================================================
# Persistence
# =================================================================


# Save persistent message data to disk (true/false).
persistence true

# name of the file for persistence
persistence_file mosquitto.db

#location of the persistence file
persistence_location /mosquitto/data/

# If persistence is enabled, save the in-memory database to disk
# every autosave_interval seconds. If set to 0, the persistence
# database will only be written when mosquitto exits. See also
# autosave_on_changes.
# Note that writing of the persistence database can be forced by
# sending mosquitto a SIGUSR1 signal.

autosave_interval 1800  # how often to save to the persistence file in seconds

# If true, mosquitto will count the number of subscription changes, retained
# messages received and queued messages and if the total exceeds
# autosave_interval then the in-memory database will be saved to disk.
# If false, mosquitto will save the in-memory database to disk by treating
# autosave_interval as a time in seconds.

#autosave_on_changes false

# Control access to the broker using a password file. This file can be
# generated using the mosquitto_passwd utility. 
# location of the file
password_file /mosquitto/config/mosquitto.passwd
  
# turn off anonymous users 
allow_anonymous false


#------------------------------------------------
# listener 
#------------------------------------------------
# Example: listener 1883 ip-address 
# listener 1883 
#---
listener 1883 
#listener 1883 127.0.0.1 # local host
#listener 1883 192.168.178.22 # Raspberry


# =================================================================
# Logging
# =================================================================
# If set to true, add a timestamp value to each log message.
log_timestamp true
  
log_dest file /mosquitto/log/mosquitto.log
# log_dest stdout # display the logs also in cmd terminal

# Types of messages to log. Use multiple log_type lines for logging
# multiple types of messages.
# Possible types are: debug, error, warning, notice, information, none, subscribe, unsubscribe, websockets, all.
# Note that debug type messages are for decoding the incoming/outgoing
# network packets. They are not logged in "topics".
log_type error
log_type warning
#log_type notice
#log_type information
log_type subscribe
log_type unsubscribe
